Useless nonterminals

   identifiers
   expressions


Terminals which are not used

   IDENTIFIERS
   EQ
   AND
   OR
   NOT
   AMPERSAND


Useless rules

   47 identifiers: IDENTIFIER
   48            | IDENTIFIER COMMA identifiers

   49 expressions: expression
   50            | /* empty */


Grammar

    0 $accept: program $end

    1 program: functions

    2 functions: function functions
    3          | /* empty */

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END

    5 declarations: declaration SEMICOLON declarations
    6             | /* empty */

    7 declaration: identifier COLON INTEGER
    8            | identifier COLON NUMBER ARRAY L_SQ_BRACKET NUMBER R_SQ_BRACKET

    9 statements: statement SEMICOLON statements
   10           | /* empty */

   11 statement: assign
   12          | ifthenelse
   13          | while
   14          | read
   15          | write
   16          | return

   17 assign: variable ASSIGNMENT expression

   18 ifthenelse: IF relational_expression THEN statements else_stmt ENDIF

   19 while: WHILE relational_expression LOOP_BEGIN statements LOOP_END

   20 read: READ variables

   21 write: WRITE variables

   22 return: RETURN expression

   23 else_stmt: ELSE statements
   24          | /* empty */

   25 relational_expression: expression comparator expression

   26 comparator: LESS_THAN
   27           | GREAT_THAN
   28           | LESS_THAN_EQ
   29           | GREAT_THAN_EQ
   30           | EQ_TO
   31           | NOT_EQ

   32 expression: multExpression
   33           | multExpression PLUS expression
   34           | multExpression MINUS expression

   35 multExpression: val
   36               | val MULT multExpression
   37               | val DIV multExpression
   38               | val MOD multExpression

   39 val: NUMBER
   40    | variable
   41    | L_PAREN expression R_PAREN
   42    | identifier L_PAREN expression R_PAREN

   43 variable: identifier

   44 variables: variable
   45          | variable COMMA variables

   46 identifier: IDENTIFIER


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 4 46
NUMBER (259) 8 39
FUNCTION (260) 4
IDENTIFIERS (261)
BEGIN_PARAMS (262) 4
END_PARAMS (263) 4
BEGIN_LOCAL_VARS (264) 4
END_LOCAL_VARS (265) 4
BODY_START (266) 4
BODY_END (267) 4
INTEGER (268) 7
ARRAY (269) 8
IF (270) 18
THEN (271) 18
ENDIF (272) 18
ELSE (273) 23
WHILE (274) 19
LOOP_BEGIN (275) 19
LOOP_END (276) 19
MINUS (277) 34
PLUS (278) 33
MULT (279) 36
DIV (280) 37
MOD (281) 38
NOT_EQ (282) 31
EQ (283)
EQ_TO (284) 30
LESS_THAN (285) 26
GREAT_THAN (286) 27
LESS_THAN_EQ (287) 28
GREAT_THAN_EQ (288) 29
READ (289) 20
WRITE (290) 21
AND (291)
OR (292)
NOT (293)
RETURN (294) 22
L_PAREN (295) 41 42
R_PAREN (296) 41 42
L_SQ_BRACKET (297) 8
AMPERSAND (298)
R_SQ_BRACKET (299) 8
COLON (300) 7 8
SEMICOLON (301) 4 5 9
COMMA (302) 45
ASSIGNMENT (303) 17


Nonterminals, with rules where they appear

$accept (49)
    on left: 0
program (50)
    on left: 1, on right: 0
functions (51)
    on left: 2 3, on right: 1 2
function (52)
    on left: 4, on right: 2
declarations (53)
    on left: 5 6, on right: 4 5
declaration (54)
    on left: 7 8, on right: 5
statements (55)
    on left: 9 10, on right: 4 9 18 19 23
statement (56)
    on left: 11 12 13 14 15 16, on right: 9
assign (57)
    on left: 17, on right: 11
ifthenelse (58)
    on left: 18, on right: 12
while (59)
    on left: 19, on right: 13
read (60)
    on left: 20, on right: 14
write (61)
    on left: 21, on right: 15
return (62)
    on left: 22, on right: 16
else_stmt (63)
    on left: 23 24, on right: 18
relational_expression (64)
    on left: 25, on right: 18 19
comparator (65)
    on left: 26 27 28 29 30 31, on right: 25
expression (66)
    on left: 32 33 34, on right: 17 22 25 33 34 41 42
multExpression (67)
    on left: 35 36 37 38, on right: 32 33 34 36 37 38
val (68)
    on left: 39 40 41 42, on right: 35 36 37 38
variable (69)
    on left: 43, on right: 17 40 44 45
variables (70)
    on left: 44 45, on right: 20 21 45
identifier (71)
    on left: 46, on right: 7 8 42 43


state 0

    0 $accept: . program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    program    go to state 2
    functions  go to state 3
    function   go to state 4


state 1

    4 function: FUNCTION . IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END

    IDENTIFIER  shift, and go to state 5


state 2

    0 $accept: program . $end

    $end  shift, and go to state 6


state 3

    1 program: functions .

    $default  reduce using rule 1 (program)


state 4

    2 functions: function . functions

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (functions)

    functions  go to state 7
    function   go to state 4


state 5

    4 function: FUNCTION IDENTIFIER . SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END

    SEMICOLON  shift, and go to state 8


state 6

    0 $accept: program $end .

    $default  accept


state 7

    2 functions: function functions .

    $default  reduce using rule 2 (functions)


state 8

    4 function: FUNCTION IDENTIFIER SEMICOLON . BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END

    BEGIN_PARAMS  shift, and go to state 9


state 9

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS . declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 11
    declaration   go to state 12
    identifier    go to state 13


state 10

   46 identifier: IDENTIFIER .

    $default  reduce using rule 46 (identifier)


state 11

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations . END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END

    END_PARAMS  shift, and go to state 14


state 12

    5 declarations: declaration . SEMICOLON declarations

    SEMICOLON  shift, and go to state 15


state 13

    7 declaration: identifier . COLON INTEGER
    8            | identifier . COLON NUMBER ARRAY L_SQ_BRACKET NUMBER R_SQ_BRACKET

    COLON  shift, and go to state 16


state 14

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS . BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END

    BEGIN_LOCAL_VARS  shift, and go to state 17


state 15

    5 declarations: declaration SEMICOLON . declarations

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 18
    declaration   go to state 12
    identifier    go to state 13


state 16

    7 declaration: identifier COLON . INTEGER
    8            | identifier COLON . NUMBER ARRAY L_SQ_BRACKET NUMBER R_SQ_BRACKET

    NUMBER   shift, and go to state 19
    INTEGER  shift, and go to state 20


state 17

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS . declarations END_LOCAL_VARS BODY_START statements BODY_END

    IDENTIFIER  shift, and go to state 10

    $default  reduce using rule 6 (declarations)

    declarations  go to state 21
    declaration   go to state 12
    identifier    go to state 13


state 18

    5 declarations: declaration SEMICOLON declarations .

    $default  reduce using rule 5 (declarations)


state 19

    8 declaration: identifier COLON NUMBER . ARRAY L_SQ_BRACKET NUMBER R_SQ_BRACKET

    ARRAY  shift, and go to state 22


state 20

    7 declaration: identifier COLON INTEGER .

    $default  reduce using rule 7 (declaration)


state 21

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations . END_LOCAL_VARS BODY_START statements BODY_END

    END_LOCAL_VARS  shift, and go to state 23


state 22

    8 declaration: identifier COLON NUMBER ARRAY . L_SQ_BRACKET NUMBER R_SQ_BRACKET

    L_SQ_BRACKET  shift, and go to state 24


state 23

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS . BODY_START statements BODY_END

    BODY_START  shift, and go to state 25


state 24

    8 declaration: identifier COLON NUMBER ARRAY L_SQ_BRACKET . NUMBER R_SQ_BRACKET

    NUMBER  shift, and go to state 26


state 25

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START . statements BODY_END

    IDENTIFIER  shift, and go to state 10
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31

    $default  reduce using rule 10 (statements)

    statements  go to state 32
    statement   go to state 33
    assign      go to state 34
    ifthenelse  go to state 35
    while       go to state 36
    read        go to state 37
    write       go to state 38
    return      go to state 39
    variable    go to state 40
    identifier  go to state 41


state 26

    8 declaration: identifier COLON NUMBER ARRAY L_SQ_BRACKET NUMBER . R_SQ_BRACKET

    R_SQ_BRACKET  shift, and go to state 42


state 27

   18 ifthenelse: IF . relational_expression THEN statements else_stmt ENDIF

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    relational_expression  go to state 45
    expression             go to state 46
    multExpression         go to state 47
    val                    go to state 48
    variable               go to state 49
    identifier             go to state 50


state 28

   19 while: WHILE . relational_expression LOOP_BEGIN statements LOOP_END

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    relational_expression  go to state 51
    expression             go to state 46
    multExpression         go to state 47
    val                    go to state 48
    variable               go to state 49
    identifier             go to state 50


state 29

   20 read: READ . variables

    IDENTIFIER  shift, and go to state 10

    variable    go to state 52
    variables   go to state 53
    identifier  go to state 41


state 30

   21 write: WRITE . variables

    IDENTIFIER  shift, and go to state 10

    variable    go to state 52
    variables   go to state 54
    identifier  go to state 41


state 31

   22 return: RETURN . expression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    expression      go to state 55
    multExpression  go to state 47
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 32

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements . BODY_END

    BODY_END  shift, and go to state 56


state 33

    9 statements: statement . SEMICOLON statements

    SEMICOLON  shift, and go to state 57


state 34

   11 statement: assign .

    $default  reduce using rule 11 (statement)


state 35

   12 statement: ifthenelse .

    $default  reduce using rule 12 (statement)


state 36

   13 statement: while .

    $default  reduce using rule 13 (statement)


state 37

   14 statement: read .

    $default  reduce using rule 14 (statement)


state 38

   15 statement: write .

    $default  reduce using rule 15 (statement)


state 39

   16 statement: return .

    $default  reduce using rule 16 (statement)


state 40

   17 assign: variable . ASSIGNMENT expression

    ASSIGNMENT  shift, and go to state 58


state 41

   43 variable: identifier .

    $default  reduce using rule 43 (variable)


state 42

    8 declaration: identifier COLON NUMBER ARRAY L_SQ_BRACKET NUMBER R_SQ_BRACKET .

    $default  reduce using rule 8 (declaration)


state 43

   39 val: NUMBER .

    $default  reduce using rule 39 (val)


state 44

   41 val: L_PAREN . expression R_PAREN

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    expression      go to state 59
    multExpression  go to state 47
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 45

   18 ifthenelse: IF relational_expression . THEN statements else_stmt ENDIF

    THEN  shift, and go to state 60


state 46

   25 relational_expression: expression . comparator expression

    NOT_EQ         shift, and go to state 61
    EQ_TO          shift, and go to state 62
    LESS_THAN      shift, and go to state 63
    GREAT_THAN     shift, and go to state 64
    LESS_THAN_EQ   shift, and go to state 65
    GREAT_THAN_EQ  shift, and go to state 66

    comparator  go to state 67


state 47

   32 expression: multExpression .
   33           | multExpression . PLUS expression
   34           | multExpression . MINUS expression

    MINUS  shift, and go to state 68
    PLUS   shift, and go to state 69

    $default  reduce using rule 32 (expression)


state 48

   35 multExpression: val .
   36               | val . MULT multExpression
   37               | val . DIV multExpression
   38               | val . MOD multExpression

    MULT  shift, and go to state 70
    DIV   shift, and go to state 71
    MOD   shift, and go to state 72

    $default  reduce using rule 35 (multExpression)


state 49

   40 val: variable .

    $default  reduce using rule 40 (val)


state 50

   42 val: identifier . L_PAREN expression R_PAREN
   43 variable: identifier .

    L_PAREN  shift, and go to state 73

    $default  reduce using rule 43 (variable)


state 51

   19 while: WHILE relational_expression . LOOP_BEGIN statements LOOP_END

    LOOP_BEGIN  shift, and go to state 74


state 52

   44 variables: variable .
   45          | variable . COMMA variables

    COMMA  shift, and go to state 75

    $default  reduce using rule 44 (variables)


state 53

   20 read: READ variables .

    $default  reduce using rule 20 (read)


state 54

   21 write: WRITE variables .

    $default  reduce using rule 21 (write)


state 55

   22 return: RETURN expression .

    $default  reduce using rule 22 (return)


state 56

    4 function: FUNCTION IDENTIFIER SEMICOLON BEGIN_PARAMS declarations END_PARAMS BEGIN_LOCAL_VARS declarations END_LOCAL_VARS BODY_START statements BODY_END .

    $default  reduce using rule 4 (function)


state 57

    9 statements: statement SEMICOLON . statements

    IDENTIFIER  shift, and go to state 10
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31

    $default  reduce using rule 10 (statements)

    statements  go to state 76
    statement   go to state 33
    assign      go to state 34
    ifthenelse  go to state 35
    while       go to state 36
    read        go to state 37
    write       go to state 38
    return      go to state 39
    variable    go to state 40
    identifier  go to state 41


state 58

   17 assign: variable ASSIGNMENT . expression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    expression      go to state 77
    multExpression  go to state 47
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 59

   41 val: L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 78


state 60

   18 ifthenelse: IF relational_expression THEN . statements else_stmt ENDIF

    IDENTIFIER  shift, and go to state 10
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31

    $default  reduce using rule 10 (statements)

    statements  go to state 79
    statement   go to state 33
    assign      go to state 34
    ifthenelse  go to state 35
    while       go to state 36
    read        go to state 37
    write       go to state 38
    return      go to state 39
    variable    go to state 40
    identifier  go to state 41


state 61

   31 comparator: NOT_EQ .

    $default  reduce using rule 31 (comparator)


state 62

   30 comparator: EQ_TO .

    $default  reduce using rule 30 (comparator)


state 63

   26 comparator: LESS_THAN .

    $default  reduce using rule 26 (comparator)


state 64

   27 comparator: GREAT_THAN .

    $default  reduce using rule 27 (comparator)


state 65

   28 comparator: LESS_THAN_EQ .

    $default  reduce using rule 28 (comparator)


state 66

   29 comparator: GREAT_THAN_EQ .

    $default  reduce using rule 29 (comparator)


state 67

   25 relational_expression: expression comparator . expression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    expression      go to state 80
    multExpression  go to state 47
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 68

   34 expression: multExpression MINUS . expression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    expression      go to state 81
    multExpression  go to state 47
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 69

   33 expression: multExpression PLUS . expression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    expression      go to state 82
    multExpression  go to state 47
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 70

   36 multExpression: val MULT . multExpression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    multExpression  go to state 83
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 71

   37 multExpression: val DIV . multExpression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    multExpression  go to state 84
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 72

   38 multExpression: val MOD . multExpression

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    multExpression  go to state 85
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 73

   42 val: identifier L_PAREN . expression R_PAREN

    IDENTIFIER  shift, and go to state 10
    NUMBER      shift, and go to state 43
    L_PAREN     shift, and go to state 44

    expression      go to state 86
    multExpression  go to state 47
    val             go to state 48
    variable        go to state 49
    identifier      go to state 50


state 74

   19 while: WHILE relational_expression LOOP_BEGIN . statements LOOP_END

    IDENTIFIER  shift, and go to state 10
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31

    $default  reduce using rule 10 (statements)

    statements  go to state 87
    statement   go to state 33
    assign      go to state 34
    ifthenelse  go to state 35
    while       go to state 36
    read        go to state 37
    write       go to state 38
    return      go to state 39
    variable    go to state 40
    identifier  go to state 41


state 75

   45 variables: variable COMMA . variables

    IDENTIFIER  shift, and go to state 10

    variable    go to state 52
    variables   go to state 88
    identifier  go to state 41


state 76

    9 statements: statement SEMICOLON statements .

    $default  reduce using rule 9 (statements)


state 77

   17 assign: variable ASSIGNMENT expression .

    $default  reduce using rule 17 (assign)


state 78

   41 val: L_PAREN expression R_PAREN .

    $default  reduce using rule 41 (val)


state 79

   18 ifthenelse: IF relational_expression THEN statements . else_stmt ENDIF

    ELSE  shift, and go to state 89

    $default  reduce using rule 24 (else_stmt)

    else_stmt  go to state 90


state 80

   25 relational_expression: expression comparator expression .

    $default  reduce using rule 25 (relational_expression)


state 81

   34 expression: multExpression MINUS expression .

    $default  reduce using rule 34 (expression)


state 82

   33 expression: multExpression PLUS expression .

    $default  reduce using rule 33 (expression)


state 83

   36 multExpression: val MULT multExpression .

    $default  reduce using rule 36 (multExpression)


state 84

   37 multExpression: val DIV multExpression .

    $default  reduce using rule 37 (multExpression)


state 85

   38 multExpression: val MOD multExpression .

    $default  reduce using rule 38 (multExpression)


state 86

   42 val: identifier L_PAREN expression . R_PAREN

    R_PAREN  shift, and go to state 91


state 87

   19 while: WHILE relational_expression LOOP_BEGIN statements . LOOP_END

    LOOP_END  shift, and go to state 92


state 88

   45 variables: variable COMMA variables .

    $default  reduce using rule 45 (variables)


state 89

   23 else_stmt: ELSE . statements

    IDENTIFIER  shift, and go to state 10
    IF          shift, and go to state 27
    WHILE       shift, and go to state 28
    READ        shift, and go to state 29
    WRITE       shift, and go to state 30
    RETURN      shift, and go to state 31

    $default  reduce using rule 10 (statements)

    statements  go to state 93
    statement   go to state 33
    assign      go to state 34
    ifthenelse  go to state 35
    while       go to state 36
    read        go to state 37
    write       go to state 38
    return      go to state 39
    variable    go to state 40
    identifier  go to state 41


state 90

   18 ifthenelse: IF relational_expression THEN statements else_stmt . ENDIF

    ENDIF  shift, and go to state 94


state 91

   42 val: identifier L_PAREN expression R_PAREN .

    $default  reduce using rule 42 (val)


state 92

   19 while: WHILE relational_expression LOOP_BEGIN statements LOOP_END .

    $default  reduce using rule 19 (while)


state 93

   23 else_stmt: ELSE statements .

    $default  reduce using rule 23 (else_stmt)


state 94

   18 ifthenelse: IF relational_expression THEN statements else_stmt ENDIF .

    $default  reduce using rule 18 (ifthenelse)
